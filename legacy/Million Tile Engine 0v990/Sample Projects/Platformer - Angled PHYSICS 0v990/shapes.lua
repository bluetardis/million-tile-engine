-- This file is for use with Corona(R) SDK
--
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			local scaleFactor = 1.0
--			local physicsData = (require "shapedefs").physicsData(scaleFactor)
--			local shape = display.newImage("objectname.png")
--			physics.addBody( shape, physicsData:get("objectname") )
--

-- copy needed functions to local scope
local unpack = unpack
local pairs = pairs
local ipairs = ipairs

local M = {}

function M.physicsData(scale)
	local physics = { data =
	{ 
		
		["cross"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   32, 5  ,  -5, 5  ,  -32, -5  ,  32, -5  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -5, 32  ,  -5, 5  ,  5, 5  ,  5, 32  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -32, -5  ,  -5, 5  ,  -32, 5  }
                    }
                     ,
                    {
                    pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -5, -5  ,  -5, -32  ,  5, -32  ,  5, -5  }
                    }
                    
                    
                    
                     ,
                    
                    
                    {
                    pe_fixture_id = "shape", density = 2, friction = 0.1, bounce = 0.8, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   32, 5  ,  -5, 5  ,  -32, -5  ,  32, -5  }
                    }
                     ,
                    {
                    pe_fixture_id = "shape", density = 2, friction = 0.1, bounce = 0.8, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -5, 32  ,  -5, 5  ,  5, 5  ,  5, 32  }
                    }
                     ,
                    {
                    pe_fixture_id = "shape", density = 2, friction = 0.1, bounce = 0.8, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -32, -5  ,  -5, 5  ,  -32, 5  }
                    }
                     ,
                    {
                    pe_fixture_id = "shape", density = 2, friction = 0.1, bounce = 0.8, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -5, -5  ,  -5, -32  ,  5, -32  ,  5, -5  }
                    }
                    
                    
                    
		}
		
		, 
		["L"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "shape", density = 2, friction = 0.1, bounce = 0.8, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -14, 16  ,  -32, 32  ,  -32, -32  ,  -14, -32  }
                    }
                     ,
                    {
                    pe_fixture_id = "shape", density = 2, friction = 0.1, bounce = 0.8, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -14, 16  ,  32, 16  ,  32, 32  ,  -32, 32  }
                    }
                    
                    
                    
		}
		
		, 
		["square"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "shape", density = 2, friction = 0.1, bounce = 0.8, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -32, 32  ,  -32, -32  ,  32, -32  ,  32, 32  }
                    }
                    
                    
                    
		}
		
		, 
		["star"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "shape", density = 2, friction = 0.1, bounce = 0.8, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -2, -11  ,  11, -1  ,  1, 10  ,  -11, 2  ,  -32, -32  }
                    }
                     ,
                    {
                    pe_fixture_id = "shape", density = 2, friction = 0.1, bounce = 0.8, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   1, 10  ,  11, -1  ,  32, 32  }
                    }
                     ,
                    {
                    pe_fixture_id = "shape", density = 2, friction = 0.1, bounce = 0.8, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -11, 2  ,  1, 10  ,  -32, 32  }
                    }
                     ,
                    {
                    pe_fixture_id = "shape", density = 2, friction = 0.1, bounce = 0.8, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   11, -1  ,  2, -11  ,  32, -32  }
                    }
                     ,
                    {
                    pe_fixture_id = "shape", density = 2, friction = 0.1, bounce = 0.8, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -2, -11  ,  2, -11  ,  11, -1  }
                    }
                    
                    
                    
		}
		
		, 
		["triangle"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "shape", density = 2, friction = 0.1, bounce = 0.8, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -1, -32  ,  2, -32  ,  32, 32  ,  -32, 32  }
                    }
                    
                    
                    
		}
		
	} }

        -- apply scale factor
        local s = scale or 1.0
        for bi,body in pairs(physics.data) do
                for fi,fixture in ipairs(body) do
                    if(fixture.shape) then
                        for ci,coordinate in ipairs(fixture.shape) do
                            fixture.shape[ci] = s * coordinate
                        end
                    else
                        fixture.radius = s * fixture.radius
                    end
                end
        end
	
	function physics:get(name)
		return unpack(self.data[name])
	end

	function physics:getFixtureId(name, index)
                return self.data[name][index].pe_fixture_id
	end
	
	return physics;
end

return M

